name: Find and Process Images

on:
  pull_request:

permissions:
  pull-requests: write

jobs:
  trivy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Get modified folders
        id: changed
        uses: tj-actions/changed-files@v46
        with:
          dir_names: "true"

      - name: Setup Kustomize
        uses: multani/action-setup-kustomize@v1
        with:
          version: 5.7.1

      - name: Install Trivy
        uses: aquasecurity/setup-trivy@v0.2.4
        with:
          version: v0.66.0



      - name: Extract images and scan with Trivy
        id: trivy_scan
        run: |
          declare -A images_set
          result=""
          exit_code=0

          # Read folders from find_kustomization.sh
          mapfile -t folders < <(./.github/scripts/find_kustomization.sh "${{ steps.changed.outputs.all_changed_files }}")

          for folder in "${folders[@]}"; do
            # Extract images from kustomization safely
            mapfile -t imgs < <(kustomize build --enable-helm --load-restrictor LoadRestrictionsNone "$folder" \
              | grep -E 'image: ' | awk '{print $2}')
            for img in "${imgs[@]}"; do
              images_set["$img"]=1
            done
          done

          # Scan images
          for img in "${!images_set[@]}"; do
            echo "üîç Scanning image: $img"
            scan_output=$(trivy image --quiet --severity HIGH,CRITICAL --format json "$img" 2>/dev/null) || true

            high=$(echo "$scan_output" | jq '[.Results[].Vulnerabilities[]? | select(.Severity=="HIGH")] | length')
            critical=$(echo "$scan_output" | jq '[.Results[].Vulnerabilities[]? | select(.Severity=="CRITICAL")] | length')
            cves=$(echo "$scan_output" | jq -r '[.Results[].Vulnerabilities[]? | select(.Severity=="HIGH" or .Severity=="CRITICAL") | .VulnerabilityID] | unique | sort | join(", ")')

            if [[ $high -eq 0 && $critical -eq 0 ]]; then
              result+="‚úÖ $img ‚Üí No HIGH/CRITICAL vulnerabilities"$'\n\n'
            else
              result+="‚ùå $img ‚Üí $high HIGH / $critical CRITICAL"$'\n'
              result+="<details><summary>Show CVE IDs</summary>$'\n'$cves$'\n'</details>"$'\n\n'
              exit_code=1
            fi
          done

          # Set outputs
          echo "scan_result<<EOF" >> "$GITHUB_OUTPUT"
          echo "$result" >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"
          echo "trivy_exit_code=$exit_code" >> "$GITHUB_OUTPUT"

      - name: Comment PR with Trivy results
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: "Trivy Scan Results"
          message: |
            ## üõ°Ô∏è Trivy Scan Results
            ${{ steps.trivy_scan.outputs.scan_result }}

      - name: Fail if vulnerabilities found
        if: ${{ steps.trivy_scan.outputs.trivy_exit_code != '0' }}
        run: |
          echo "‚ùå HIGH or CRITICAL vulnerabilities detected!"
          exit 1

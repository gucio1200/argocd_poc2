name: Kustomize Diff

on:
  pull_request:

permissions:
  pull-requests: write

jobs:
  diff:
    name: Kustomize Diff
    runs-on: ubuntu-latest

    steps:
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 0

      - name: Get list of changed directories
        id: changed
        uses: tj-actions/changed-files@v46
        with:
          dir_names: "true"

      - name: Find affected kustomizations
        id: kustomizations
        run: |
          KUSTOMIZATIONS=$(./.github/scripts/find_kustomization.sh "${{ steps.changed.outputs.all_changed_files }}")
          echo "kustomizations=$KUSTOMIZATIONS" >> "$GITHUB_OUTPUT"
          echo "Affected kustomizations: $KUSTOMIZATIONS"

      - name: Checkout base branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.base.ref }}
          path: base-branch
          fetch-depth: 0

      - name: Setup Kustomize
        uses: multani/action-setup-kustomize@v1
        with:
          version: 5.7.1

      - name: Generate diffs
        id: generate-diff
        run: |
          TMPDIR=$(mktemp -d)
          mkdir -p $TMPDIR/base $TMPDIR/pr

          for path in ${{ steps.kustomizations.outputs.kustomizations }}; do
            BASENAME=$(basename "$path")
            echo "Building manifests for $path"
            kustomize build --enable-helm --load-restrictor LoadRestrictionsNone base-branch/$path > $TMPDIR/base/$BASENAME.yaml
            kustomize build --enable-helm --load-restrictor LoadRestrictionsNone $path > $TMPDIR/pr/$BASENAME.yaml
          done

          COMMENT_FILE=diff-comment.md
          # Generate full git-style diff with proper headers
          git -c color.ui=always diff --no-index --color=never $TMPDIR/base $TMPDIR/pr > $COMMENT_FILE

          # fallback if empty
          if [[ ! -s "$COMMENT_FILE" ]]; then
            echo "No Kustomize changes detected." > $COMMENT_FILE
          fi

          # Escape newlines for GitHub Actions output
          ESCAPED_COMMENT=$(sed ':a;N;$!ba;s/\n/%0A/g' $COMMENT_FILE)
          echo "comment=$ESCAPED_COMMENT" >> $GITHUB_OUTPUT

      - name: Post Sticky PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: ${{ steps.generate-diff.outputs.comment }}
          header: "### :gear: Kustomize Diff"
